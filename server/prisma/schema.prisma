generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model material {
  id        Int       @unique(map: "Material_id_key") @default(autoincrement())
  name      String
  quantity  Int
  createdAt DateTime? @default(now())
  updatedAt DateTime?
  salle     salle[]
}

model reservation {
  id        Int    @unique(map: "Reservation_id_key") @default(autoincrement())
  userId    Int?
  salleId   Int?
  startDate String
  endDate   String
  duration  Int?
  salle     salle? @relation(fields: [salleId], references: [id], onDelete: Cascade, map: "Reservation_salleId_fkey")
  user      user?  @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Reservation_userId_fkey")

  @@index([salleId], map: "Reservation_salleId_fkey")
  @@index([userId], map: "Reservation_userId_fkey")
}

model salle {
  id           Int           @unique(map: "Salle_id_key") @default(autoincrement())
  materialId   Int
  salleNumber  String?
  capacity     Int
  startingHour String?
  closingHour  String?
  availablity  Boolean
  reservation  reservation[]
  material     material      @relation(fields: [materialId], references: [id], onDelete: Cascade, map: "Salle_materialId_fkey")

  @@index([materialId], map: "idx_materialId")
}

model user {
  id          Int           @unique(map: "User_id_key") @default(autoincrement())
  username    String
  password    String
  role        String
  email       String
  phoneNumber String?
  CEN         String?
  profile     String?
  createdAt   DateTime?     @default(now())
  updatedAt   DateTime?
  reservation reservation[]
}
